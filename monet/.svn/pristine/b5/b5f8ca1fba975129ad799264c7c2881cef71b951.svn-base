//
//  FFMessage.m
//  FireFly
//
//  Created by LingTuan on 17/9/14.
//  Copyright © 2017年 NAT. All rights reserved.
//

#import "FFMessage.h"

@implementation FFMessage

@synthesize content = _content;
@synthesize netDict = _netDict;

- (NSString *)content {
    
    NSMutableDictionary *dict = [NSMutableDictionary dictionary];
    
    dict[@"messageType"] = DDYStrFormat(@"%d",(int)_messageType);
    
    switch (_messageType)
    {
        case FFMessageTypeText:
        {
            dict[@"textContent"] = _textContent;
        }
            break;
        case FFMessageTypeImg:
        {
            dict[@"imgBase64Data"] = _imgBase64Data;
            dict[@"fileURL"] = _fileURL;
        }
            break;
        case FFMessageTypeImgGroup:
        {
            dict[@"imgGroupName"] = _imgGroupName;
            dict[@"imgGroupStopName"] = _imgGroupStopName;
            dict[@"fileURL"] = _fileURL;
        }
            break;
        case FFMessageTypeGif:
        {
            dict[@"gifBase64Data"] = _gifBase64Data;
            dict[@"fileURL"] = _fileURL;
        }
            break;
        case FFMessageTypeVoice:
        {
            dict[@"voiceDuration"] = _voiceDuration;
            dict[@"fileURL"] = _fileURL;
        }
            break;
        case FFMessageTypeLocation:
        {
            dict[@"address"] = _address;
            dict[@"longitude"] = _longitude;
            dict[@"latitude"] = _latitude;
        }
            break;
        case FFMessageTypeFileDoc:
        {
            
        }
            break;
        case FFMessageTypeFilePdf:
        {
            
        }
            break;
        case FFMessageTypeFilePpt:
        {
            
        }
            break;
        case FFMessageTypeFileXls:
        {
            
        }
            break;
        case FFMessageTypeFileTxt:
        {
            
        }
            break;
        case FFMessageTypeFileMp3:
        {
            
        }
            break;
        case FFMessageTypeFileZip:
        {
            
        }
            break;
        case FFMessageTypeFileRar:
        {
            
        }
            break;
        case FFMessageTypeFile:
        {
            
        }
            break;
        case FFMessageTypeExecutive:
        {
            
        }
            break;
        case FFMessageTypeShare:
        {
            
        }
            break;
    }
    return [NSString ddy_ToJsonStr:dict];
}

- (void)setContent:(NSString *)content {
    _content = content;
    
    NSDictionary *dict = [NSString ddy_JsonStrToDict:content];
    NSString *msgType = dict[@"messageType"];
    _messageType = (FFMessageType)([msgType intValue]);
    
    switch (_messageType)
    {
        case FFMessageTypeText:
        {
            _textContent = dict[@"textContent"];
        }
            break;
        case FFMessageTypeImg:
        {
            _imgBase64Data = dict[@"imgBase64Data"];
            _fileURL = dict[@"fileURL"];
        }
            break;
        case FFMessageTypeImgGroup:
        {
            _imgGroupName = dict[@"imgGroupName"];
            _imgGroupStopName = dict[@"imgGroupStopName"];
            _fileURL = dict[@"fileURL"];
        }
            break;
        case FFMessageTypeGif:
        {
            _gifBase64Data = dict[@"gifBase64Data"];
            _fileURL = dict[@"fileURL"];
        }
            break;
        case FFMessageTypeVoice:
        {
            _voiceDuration = dict[@"voiceDuration"];
            _fileURL = dict[@"fileURL"];
        }
            break;
        case FFMessageTypeLocation:
        {
            _address = dict[@"address"];
            _longitude = dict[@"longitude"];
            _latitude = dict[@"latitude"];
        }
            break;
        case FFMessageTypeFileDoc:
        {
            
        }
            break;
        case FFMessageTypeFilePdf:
        {
            
        }
            break;
        case FFMessageTypeFilePpt:
        {
            
        }
            break;
        case FFMessageTypeFileXls:
        {
            
        }
            break;
        case FFMessageTypeFileTxt:
        {
            
        }
            break;
        case FFMessageTypeFileMp3:
        {
            
        }
            break;
        case FFMessageTypeFileZip:
        {
            
        }
            break;
        case FFMessageTypeFileRar:
        {
            
        }
            break;
        case FFMessageTypeFile:
        {
            
        }
            break;
        case FFMessageTypeExecutive:
        {
            
        }
            break;
        case FFMessageTypeShare:
        {
            
        }
            break;
    }
}

- (NSString *)showText {
    
    switch (_messageType)
    {
        case FFMessageTypeText:
        {
            _showText = _textContent;
        }
            break;
        case FFMessageTypeImg:
        {
            _showText = @"[图片]";
        }
            break;
        case FFMessageTypeImgGroup:
        {
            _showText = @"[动图]";
        }
            break;
        case FFMessageTypeGif:
        {
            _showText = @"[gif]";
        }
            break;
        case FFMessageTypeVoice:
        {
            _showText = @"[语音]";
        }
            break;
        case FFMessageTypeLocation:
        {
            _showText = @"[位置]";
        }
            break;
        case FFMessageTypeFileDoc:
        {
            
        }
            break;
        case FFMessageTypeFilePdf:
        {
            
        }
            break;
        case FFMessageTypeFilePpt:
        {
            
        }
            break;
        case FFMessageTypeFileXls:
        {
            
        }
            break;
        case FFMessageTypeFileTxt:
        {
            
        }
            break;
        case FFMessageTypeFileMp3:
        {
            
        }
            break;
        case FFMessageTypeFileZip:
        {
            
        }
            break;
        case FFMessageTypeFileRar:
        {
            
        }
            break;
        case FFMessageTypeFile:
        {
            
        }
            break;
        case FFMessageTypeExecutive:
        {
            
        }
            break;
        case FFMessageTypeShare:
        {
            
        }
            break;
    }
    return _showText;
}
/** {"userid":"xx","username":"张三","userimage":"http://wwww.1.jpg","usergender":"0","type":"0","content":"hello！",friend_log”:“0”,"mask":"0","msgname":"文本","msgsource":"约你"} */
- (NSMutableDictionary *)netDict  {
    NSMutableDictionary *dict = [NSMutableDictionary dictionary];
    dict[@"userid"] = self.uidFrom;
    dict[@"username"] = self.nickName;
    dict[@"iOSMsgID"]= self.messageID; // 用于有网无网消息去重
//    dict[@"userimage"]
//    dict[@"usergender"]
    
    if (self.uidFrom) dict[@"uidFrom"] = self.uidFrom;
    if (self.nickName) dict[@"nickName"] = self.nickName;
    if (self.uidTo) dict[@"uidTo"] = self.uidTo;
    if (self.messageID) dict[@"messageID"] = self.messageID;
    if (self.remoteID) dict[@"remoteID"] = self.remoteID;
    if (self.groupName) dict[@"groupName"] = self.groupName;
    dict[@"timeStamp"] = DDYStrFormat(@"%lf",[[NSDate date] timeIntervalSince1970]*1000);
    dict[@"chatType"] = DDYStrFormat(@"%d",(int)self.chatType);
    dict[@"messageType"] = DDYStrFormat(@"%d",(int)_messageType);
    
    switch (_messageType)
    {
        case FFMessageTypeText:
        {
            dict[@"type"] = @"0";
            dict[@"content"] = _textContent;
        }
            break;
        case FFMessageTypeImg:
        {
            dict[@"type"] = @"1";
            dict[@"cover"] = _imgBase64Data;
            dict[@"content"] = _fileURL;
        }
            break;
        case FFMessageTypeVoice:
        {
            dict[@"type"] = @"2";
            dict[@"voiceDuration"] = _voiceDuration;
            dict[@"fileURL"] = _fileURL;
        }
            break;
        case FFMessageTypeGif:
        {
            dict[@"type"] = @"3";
            dict[@"gifBase64Data"] = _gifBase64Data;
            dict[@"fileURL"] = _fileURL;
        }
            break;
        case FFMessageTypeLocation:
        {
            dict[@"type"] = @"4";
            dict[@"address"] = _address;
            dict[@"longitude"] = _longitude;
            dict[@"latitude"] = _latitude;
        }
            break;
        default:
            break;
    }
    return dict;
}

- (void)setNetDict:(NSMutableDictionary *)netDict {
    _netDict         = netDict;
    self.uidFrom     = netDict[@"uidFrom"];
    self.uidTo       = netDict[@"uidTo"];
    self.nickName    = netDict[@"nickName"];
    self.messageID   = netDict[@"messageID"];
    self.remoteID    = netDict[@"remoteID"];
    self.groupName   = netDict[@"groupName"];
    self.timeStamp   = [netDict[@"timeStamp"] integerValue];
    self.chatType    = (FFChatType)([netDict[@"chatType"] integerValue]);
    self.messageType = (FFMessageType)([netDict[@"messageType"] integerValue]);
    
    if (self.chatType == FFChatTypeSingle) {
        self.remoteID  = netDict[@"uidFrom"];
        self.groupName = netDict[@"nickName"];
    } else {
        self.remoteID  = netDict[@"remoteID"];
        self.groupName = netDict[@"groupName"];
    }
    
    switch (_messageType)
    {
        case FFMessageTypeText:
        {
            self.textContent = netDict[@"textContent"];
        }
            break;
        case FFMessageTypeImg:
        {
            self.imgBase64Data = netDict[@"imgBase64Data"];
            self.fileURL = netDict[@"fileURL"];
        }
            break;
        case FFMessageTypeImgGroup:
        {
            self.imgGroupName = netDict[@"imgGroupName"];
            self.imgGroupStopName = netDict[@"imgGroupStopName"];
            self.fileURL = netDict[@"fileURL"];
        }
            break;
        case FFMessageTypeGif:
        {
            self.gifBase64Data = netDict[@"gifBase64Data"];
            self.fileURL = netDict[@"fileURL"];
        }
            break;
        case FFMessageTypeVoice:
        {
            self.voiceDuration = netDict[@"voiceDuration"];
            self.fileURL = netDict[@"fileURL"];
        }
            break;
        case FFMessageTypeLocation:
        {
            self.address = netDict[@"address"];
            self.longitude = netDict[@"longitude"];
            self.latitude = netDict[@"latitude"];
        }
            break;
        case FFMessageTypeFileDoc:
        {
            
        }
            break;
        case FFMessageTypeFilePdf:
        {
            
        }
            break;
        case FFMessageTypeFilePpt:
        {
            
        }
            break;
        case FFMessageTypeFileXls:
        {
            
        }
            break;
        case FFMessageTypeFileTxt:
        {
            
        }
            break;
        case FFMessageTypeFileMp3:
        {
            
        }
            break;
        case FFMessageTypeFileZip:
        {
            
        }
            break;
        case FFMessageTypeFileRar:
        {
            
        }
            break;
        case FFMessageTypeFile:
        {
            
        }
            break;
        case FFMessageTypeExecutive:
        {
            
        }
            break;
        case FFMessageTypeShare:
        {
            
        }
            break;
    }
}



@end

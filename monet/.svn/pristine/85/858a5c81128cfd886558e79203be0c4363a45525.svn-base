//
//  DQActionSheet.m
//  YuanYuan
//
//  Created by DFQNextApp on 15/9/6.
//  Copyright (c) 2015年 北京领团科技有限责任公司. All rights reserved.
//

#import "DQActionSheet.h"

#define iPhone6Plus ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1242,2208), [[UIScreen mainScreen] currentMode].size) : NO)

#define BUTTON_COLOR                            [UIColor whiteColor]

#define ACTIONSHEET_BACKGROUNDCOLOR             [UIColor colorWithRed:230/255.00f green:226/255.00f blue:239/255.00f alpha:1]
#define WINDOW_COLOR                            [UIColor colorWithRed:0 green:0 blue:0 alpha:0.2]


#define BUTTON_INTERVAL_HEIGHT                   1
#define BUTTON_HEIGHT                           iPhone6Plus?55:44
#define BUTTON_WIDTH                            [UIScreen mainScreen].bounds.size.width
#define BUTTONTITLE_FONT                        [UIFont systemFontOfSize:16]


#define TITLE_INTERVAL_HEIGHT                   1
#define TITLE_WIDTH                             [UIScreen mainScreen].bounds.size.width
#define TITLE_FONT                              [UIFont systemFontOfSize:13]
#define TITLE_NUMBER_LINES                      2

#define ANIMATE_DURATION                        0.25f

@interface DQActionSheet ()

@property (nonatomic,strong) UIView *backGroundView;
@property (nonatomic,strong) NSString *actionTitle;
@property (nonatomic,assign) NSInteger indexNumber;
@property (nonatomic,assign) BOOL isHadTitle;
@property (nonatomic,assign) BOOL isHadDestructionButton;
@property (nonatomic,assign) BOOL isHadOtherButton;
@property (nonatomic,assign) BOOL isHadCancelButton;
@property (nonatomic,assign) CGFloat actionSheetHeight;

@end

@implementation DQActionSheet

#pragma mark - Public method

- (id)initWithTitle:(NSString *)title cancelButtonTitle:(NSString *)cancelButtonTitle destructiveButtonTitle:(NSString *)destructiveButtonTitle otherButtonTitles:(NSString *)otherButtonTitles,...
{
    
    self = [super init];
    if (self) {
        
        //初始化背景视图，添加手势
        self.frame = CGRectMake(0, 0, [UIScreen mainScreen].bounds.size.width, [UIScreen mainScreen].bounds.size.height);
        self.backgroundColor = WINDOW_COLOR;
        self.userInteractionEnabled = YES;
        UITapGestureRecognizer *tapGesture = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(tappedCancel)];
        [self addGestureRecognizer:tapGesture];
        
        
        if (otherButtonTitles) {
            
            NSMutableArray * otherButtonTitlesArray = [[NSMutableArray alloc] init];
            
            [otherButtonTitlesArray addObject:otherButtonTitles];
            
            va_list args;
            va_start(args,otherButtonTitles);
            if (otherButtonTitles) {
                
                NSObject * otherString;
                while (1) {
                    
                    otherString = va_arg(args, NSObject *);
                    
                    if (otherString) {
                        [otherButtonTitlesArray addObject:[(NSString *)otherString asNSString]];
                    }
                    else
                    {
                        break;
                    }
                }
            }
            va_end(args);
            [self creatButtonsWithTitle:title cancelButtonTitle:cancelButtonTitle destructionButtonTitle:destructiveButtonTitle otherButtonTitles:otherButtonTitlesArray];
            
        }
        else
        {
            [self creatButtonsWithTitle:title cancelButtonTitle:cancelButtonTitle destructionButtonTitle:destructiveButtonTitle otherButtonTitles:nil];
            
        }
        
        
    }
    return self;
}

- (void)show
{
    [[UIApplication sharedApplication].delegate.window addSubview:self];
}

- (void)showInView:(UIView *)view
{
    [[UIApplication sharedApplication].delegate.window addSubview:self];
}

- (CGSize)sizeWithFont:(UIFont *)font byWidth:(CGFloat)width string:(NSString *)string
{
    
#if __IPHONE_OS_VERSION_MIN_REQUIRED >= 70000
    
    CGSize size = CGSizeMake(width, 999999.0f);
    
    NSDictionary * tdic = [NSDictionary dictionaryWithObjectsAndKeys:font, NSFontAttributeName,nil];
    size = [string boundingRectWithSize:size options:NSStringDrawingUsesLineFragmentOrigin |NSStringDrawingUsesFontLeading attributes:tdic context:nil].size;
    
    return size;
    
#else
    
    return [string sizeWithFont:font
              constrainedToSize:CGSizeMake(width, 999999.0f)
                  lineBreakMode:UILineBreakModeWordWrap];
    
#endif
}

#pragma mark - CreatButtonAndTitle method

- (void)creatButtonsWithTitle:(NSString *)title cancelButtonTitle:(NSString *)cancelButtonTitle destructionButtonTitle:(NSString *)destructiveButtonTitle otherButtonTitles:(NSArray *)otherButtonTitlesArray
{
    //初始化
    self.isHadTitle = NO;
    self.isHadDestructionButton = NO;
    self.isHadOtherButton = NO;
    self.isHadCancelButton = NO;
    
    //初始化ACtionView的高度为0
    self.actionSheetHeight = 0;
    
    //初始化IndexNumber为0;
    self.indexNumber = 0;
    
    //生成ActionSheetView
    self.backGroundView = [[UIView alloc] initWithFrame:CGRectMake(0, [UIScreen mainScreen].bounds.size.height, [UIScreen mainScreen].bounds.size.width, 0)];
    self.backGroundView.backgroundColor = ACTIONSHEET_BACKGROUNDCOLOR;
    
    //给ActionSheetView添加响应事件
    UITapGestureRecognizer *tapGesture = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(tappedBackGroundView)];
    [self.backGroundView addGestureRecognizer:tapGesture];
    
    [self addSubview:self.backGroundView];
    
    if (title)
    {
        self.isHadTitle = YES;
        UILabel *titleLabel = [self creatTitleLabelWith:title];
        self.actionSheetHeight = self.actionSheetHeight + TITLE_INTERVAL_HEIGHT+titleLabel.frame.size.height;
        [self.backGroundView addSubview:titleLabel];
    }
    
    if (destructiveButtonTitle)
    {
        self.isHadDestructionButton = YES;
        UIButton *destructiveButton = [self creatDestructiveButtonWith:destructiveButtonTitle];
        destructiveButton.tag = self.indexNumber;
        [destructiveButton addTarget:self action:@selector(clickOnButtonWith:) forControlEvents:UIControlEventTouchUpInside];
        
        if (self.isHadTitle == YES)
        {
            //当有title时
            [destructiveButton setFrame:CGRectMake(destructiveButton.frame.origin.x, self.actionSheetHeight, destructiveButton.frame.size.width, destructiveButton.frame.size.height)];
        }
        
        self.actionSheetHeight = self.actionSheetHeight + destructiveButton.frame.size.height+BUTTON_INTERVAL_HEIGHT;
        
        [self.backGroundView addSubview:destructiveButton];
        
        self.indexNumber++;
    }
    
    if (otherButtonTitlesArray)
    {
        if (otherButtonTitlesArray.count > 0)
        {
            self.isHadOtherButton = YES;
            
            //当无title与destructionButton时
            if (self.isHadTitle == NO && self.isHadDestructionButton == NO)
            {
                for (int i = 0; i<otherButtonTitlesArray.count; i++)
                {
                    UIButton *otherButton = [self creatOtherButtonWith:[otherButtonTitlesArray objectAtIndex:i] withPostion:i];
                    
                    otherButton.tag = self.indexNumber;
                    [otherButton addTarget:self action:@selector(clickOnButtonWith:) forControlEvents:UIControlEventTouchUpInside];
                    self.actionSheetHeight = self.actionSheetHeight + otherButton.frame.size.height+(BUTTON_INTERVAL_HEIGHT);
                    
                    [self.backGroundView addSubview:otherButton];
                    
                    self.indexNumber++;
                }
            }
            //当有title或destructionButton时
            else if (self.isHadTitle == YES || self.isHadDestructionButton == YES)
            {
                for (int i = 0; i< otherButtonTitlesArray.count; i++)
                {
                    UIButton *otherButton = [self creatOtherButtonWith:[otherButtonTitlesArray objectAtIndex:i] withPostion:i];
                    
                    otherButton.tag = self.indexNumber;
                    [otherButton addTarget:self action:@selector(clickOnButtonWith:) forControlEvents:UIControlEventTouchUpInside];
                    [otherButton setFrame:CGRectMake(otherButton.frame.origin.x, self.actionSheetHeight, otherButton.frame.size.width, otherButton.frame.size.height)];
                    
                    self.actionSheetHeight = self.actionSheetHeight + otherButton.frame.size.height+(BUTTON_INTERVAL_HEIGHT);
                    
                    [self.backGroundView addSubview:otherButton];
                    
                    self.indexNumber++;
                }
            }
        }
    }
    
    if (cancelButtonTitle)
    {
        self.isHadCancelButton = YES;
        
        UIButton *cancelButton = [self creatCancelButtonWith:cancelButtonTitle];
        
        cancelButton.tag = self.indexNumber;
        [cancelButton addTarget:self action:@selector(clickOnButtonWith:) forControlEvents:UIControlEventTouchUpInside];
        
        //当有title或destructionButton或otherbuttons时
        if (self.isHadTitle == YES || self.isHadDestructionButton == YES || self.isHadOtherButton == YES)
        {
            [cancelButton setFrame:CGRectMake(cancelButton.frame.origin.x, self.actionSheetHeight + 5, cancelButton.frame.size.width, cancelButton.frame.size.height)];
        }
        
        self.actionSheetHeight = self.actionSheetHeight + cancelButton.frame.size.height;
        
        [self.backGroundView addSubview:cancelButton];
    }
    
    [UIView animateWithDuration:ANIMATE_DURATION animations:^{
        [self.backGroundView setFrame:CGRectMake(0, [UIScreen mainScreen].bounds.size.height-self.actionSheetHeight, [UIScreen mainScreen].bounds.size.width, self.actionSheetHeight)];
    } completion:^(BOOL finished) {
    }];
}

- (UILabel *)creatTitleLabelWith:(NSString *)title
{
    CGSize size = [self sizeWithFont:TITLE_FONT byWidth:TITLE_WIDTH - 20 string:title];
    
    UIView * backTitle = [[UIView alloc ] initWithFrame:CGRectMake(0, 0, TITLE_WIDTH, size.height + (iPhone6Plus?30:20) + 10)];
    [backTitle setBackgroundColor:BUTTON_COLOR];
    [self.backGroundView addSubview:backTitle];
    
    UILabel *titlelabel = [[UILabel alloc] initWithFrame:CGRectMake(10, 0, TITLE_WIDTH - 20, size.height + (iPhone6Plus?30:20) + 10)];
    titlelabel.backgroundColor = BUTTON_COLOR;
    titlelabel.textAlignment = NSTextAlignmentCenter;
    titlelabel.font = TITLE_FONT;
    titlelabel.text = title;
    titlelabel.textColor = [UIColor grayColor];
    titlelabel.numberOfLines = TITLE_NUMBER_LINES;
    return titlelabel;
}

- (UIButton *)creatDestructiveButtonWith:(NSString *)destructiveButtonTitle
{
    UIButton *destructiveButton = [[UIButton alloc] initWithFrame:CGRectMake(0, 0, BUTTON_WIDTH, BUTTON_HEIGHT)];
    
    destructiveButton.backgroundColor = BUTTON_COLOR;
    [destructiveButton setTitle:destructiveButtonTitle forState:UIControlStateNormal];
    destructiveButton.titleLabel.font = BUTTONTITLE_FONT;
    
    [destructiveButton setTitleColor:[UIColor redColor] forState:UIControlStateNormal];
    [destructiveButton setTitleColor:[UIColor lightGrayColor] forState:UIControlStateHighlighted];
    return destructiveButton;
}

- (UIButton *)creatOtherButtonWith:(NSString *)otherButtonTitle withPostion:(NSInteger )postionIndex
{
    UIButton *otherButton = [[UIButton alloc] initWithFrame:CGRectMake(0, self.actionSheetHeight, BUTTON_WIDTH, BUTTON_HEIGHT)];
    
    otherButton.backgroundColor = BUTTON_COLOR;
    [otherButton setTitle:otherButtonTitle forState:UIControlStateNormal];
    otherButton.titleLabel.font = BUTTONTITLE_FONT;;
    [otherButton setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
    [otherButton setTitleColor:[UIColor lightGrayColor] forState:UIControlStateHighlighted];
    return otherButton;
}

- (UIButton *)creatCancelButtonWith:(NSString *)cancelButtonTitle
{
    UIButton *cancelButton = [[UIButton alloc] initWithFrame:CGRectMake(0, 0, BUTTON_WIDTH, BUTTON_HEIGHT)];
    
    cancelButton.backgroundColor = BUTTON_COLOR;
    [cancelButton setTitle:cancelButtonTitle forState:UIControlStateNormal];
    cancelButton.titleLabel.font = BUTTONTITLE_FONT;
    [cancelButton setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
    [cancelButton setTitleColor:[UIColor lightGrayColor] forState:UIControlStateHighlighted];
    return cancelButton;
}

- (void)clickOnButtonWith:(UIButton *)button
{
    [self tappedCancel];
    if (self.actionBlock) {
        self.actionBlock(button.tag);
    }
}

- (void)tappedCancel
{
    [UIView animateWithDuration:ANIMATE_DURATION animations:^{
        [self.backGroundView setFrame:CGRectMake(0, [UIScreen mainScreen].bounds.size.height, [UIScreen mainScreen].bounds.size.width, 0)];
        self.alpha = 0;
    } completion:^(BOOL finished) {
        if (finished) {
            [self removeFromSuperview];
        }
    }];
}

- (void)tappedBackGroundView
{
    //
}

@end

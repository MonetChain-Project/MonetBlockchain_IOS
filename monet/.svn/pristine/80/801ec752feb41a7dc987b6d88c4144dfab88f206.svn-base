//
//  FFChatsVC.m
//  FireFly
//
//  Created by LingTuan on 17/9/19.
//  Copyright © 2017年 NAT. All rights reserved.
//

#import "FFChatsVC.h"
#import "FFHomeChatsCell.h"
#import "FFChatViewController.h"

@interface FFChatsVC ()<UISearchResultsUpdating, UISearchBarDelegate, UIViewControllerPreviewingDelegate>
{
    UITextField * _fidfiled;
}
@property (nonatomic, strong) UISearchController *searchController;
@property (nonatomic, strong) NSMutableArray *chatsArray;
@property (nonatomic, strong) NSMutableArray *searchArray;

@end

@implementation FFChatsVC

- (NSMutableArray *)chatsArray {
    if (!_chatsArray) {
        _chatsArray = [NSMutableArray array];
    }
    return _chatsArray;
}

- (NSMutableArray *)searchArray {
    if (!_searchArray) {
        _searchArray = [NSMutableArray array];
    }
    return _searchArray;
}

- (UISearchController *)searchController {
    if (!_searchController) {
        // 初始化搜索控制器
        _searchController = [[UISearchController alloc] initWithSearchResultsController:nil];
        // 设置搜索栏背景色
        _searchController.searchBar.barTintColor = DDY_White;
        // 保证UISearchController在激活状态下push后searchBar不会仍留在界面上
        self.definesPresentationContext = YES;
        // 搜索更新时调用的代理
        _searchController.searchResultsUpdater = self;
        // 搜索条代理
        _searchController.searchBar.delegate = self;
        // 搜索时是否隐藏背景 (没感觉区别在哪)
        _searchController.dimsBackgroundDuringPresentation = NO;
        // 搜索时是否隐藏导航
        _searchController.hidesNavigationBarDuringPresentation = NO;
        // 搜索时背景变模糊
        _searchController.obscuresBackgroundDuringPresentation = NO;
        // 占位文字 _searchController.searchBar.placeholder = DDYLocalStr(@"Search");
        [_searchController.searchBar ddy_LeftPlaceholder:DDYLocalStr(@"Search")];
        // 搜索栏背景图
        _searchController.searchBar.backgroundImage = [UIImage imageWithColor:DDY_White size:CGSizeMake(DDYSCREENW, 44)];
        // 搜索输入栏背景色
        [_searchController.searchBar setSearchFieldBackgroundImage:[self getBgImg] forState:UIControlStateNormal];
        // 改变高度 不能直接设置frame
        _searchController.searchBar.transform = CGAffineTransformMakeScale(1, 1.1);
    }
    return _searchController;
}

- (UIImage *)getBgImg {
    return [[UIImage imageWithColor:DDYLC_RGBA(235, 235, 235, 1) size:DDYSize(DDYSCREENW-150, 28)] imageCornerRadius:8];
}

- (void)viewDidLoad {
    [super viewDidLoad];
    self.tableView.tableHeaderView = self.searchController.searchBar;
    self.tableView.tableFooterView = [UIView new];
    
    if (![FFLocalUserInfo LCInstance].isSignUp) {
        [self registerView];
    }
}

- (void)registerView
{
    UIView * header = [[UIView alloc] initWithFrame:LC_RECT(0, 0, DDYSCREENW, 50)];
    header.backgroundColor = APP_MAIN_COLOR;
    [header addTapTarget:self action:@selector(headerAction)];
    [self.view addSubview:header];
    self.tableView.viewFrameY = header.viewBottomY;
    
    UILabel * tipsLabel = [[UILabel alloc] initWithFrame:CGRectMake(20, 0, DDYSCREENW - 40, 50)];
    tipsLabel.text = @"为了账户安全请填写FID,以保证正常登录";
    tipsLabel.font = NA_FONT(14);
    tipsLabel.textColor = LC_RGB(51, 51, 51);
    [header addSubview:tipsLabel];

}

- (void)headerAction
{
    UIAlertController * alertController = [UIAlertController alertControllerWithTitle: nil
                                                                              message: @"为了账户安全请填写FID,以保证正常登录"
                                                                       preferredStyle:UIAlertControllerStyleAlert];
    
    [alertController addTextFieldWithConfigurationHandler:^(UITextField *textField) {
        textField.placeholder = @"Digital + letter combinations";
        textField.textColor = [UIColor blueColor];
        textField.clearButtonMode = UITextFieldViewModeWhileEditing;
    }];
    
    [alertController addAction:[UIAlertAction actionWithTitle:@"OK" style:UIAlertActionStyleDefault handler:^(UIAlertAction *action) {
        NSArray * textfields = alertController.textFields;
        _fidfiled = textfields[0];
        
        [self loadRegisterData];
        
    }]];
    
    [self presentViewController:alertController animated:YES completion:nil];
}

- (void)loadRegisterData
{
    NSUserDefaults * user = [NSUserDefaults standardUserDefaults];
    NSString * username = [user objectForKey:@"username"];
    NSString * password = [user objectForKey:@"password"];
    
    NSDictionary * params = @{@"fid": _fidfiled.text,
                              @"password":password,
                              @"localid":@"a8b506205a3296936f48290b86666613afb790d8",
                              @"username":username,
                              };
    
    [NANetWorkRequest na_getDataWithService:@"user" action:@"register" parameters:params results:^(BOOL status, NSDictionary *result) {
        if (status) {
            
            NSLog(@"===== 注册成功 ====");
            
            [FFLocalUserInfo LCInstance].uid = [[result objectForKey:@"uid"] integerValue];
            [FFLocalUserInfo LCInstance].token = [[result objectForKey:@"token"] asNSString];
            [FFLocalUserInfo LCInstance].isSignUp = YES;
            
        }
    }];

}

#pragma mark - Table view data source

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    
    return !self.searchController.active ? 20 : self.searchArray.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    
    FFHomeChatsCell *cell = [FFHomeChatsCell cellWithTableView:tableView];
    // 3DTouch Peek 预览 遵循UIViewControllerPreviewingDelegate
    if (IOS_9_LATER && self.traitCollection.forceTouchCapability == UIForceTouchCapabilityAvailable) {
        DDYInfoLog(@"3DTouch可用,给cell注册peek(预览)和pop功能");
        [self registerForPreviewingWithDelegate:self sourceView:cell];
    }
    return cell;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
    return 80;
}

#pragma mark - UISearchResultsUpdating
- (void)updateSearchResultsForSearchController:(UISearchController *)searchController {
    
    [self.tableView reloadData];
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    FFChatViewController *vc = [FFChatViewController vc];
    vc.chatUID = @"222";
    [self.navigationController pushViewController:vc animated:YES];
}

#pragma mark Peek预览
- (nullable UIViewController *)previewingContext:(id <UIViewControllerPreviewing>)previewingContext viewControllerForLocation:(CGPoint)location
{
    // 获取按压的cell所在行，[previewingContext sourceView]就是按压的那个视图
    NSIndexPath *indexPath = [self.tableView indexPathForCell:(UITableViewCell* )[previewingContext sourceView]];
    if (indexPath.section==0 && indexPath.row==0) {
        // 设定预览的界面
        FFChatViewController *childVC = [FFChatViewController vc];
        childVC.preferredContentSize = CGSizeMake(0.0f, 500.0f);
        // 调整不被虚化的范围，按压的那个cell不被虚化（轻轻按压时周边会被虚化，再少用力展示预览，再加力跳页至设定界面）
        CGRect rect = CGRectMake(0, 0, DDYSCREENW, 40);
        previewingContext.sourceRect = rect;
        // 返回预览界面
        return childVC;
    }
    return nil;
}

#pragma mark Pop用力按则进入
- (void)previewingContext:(id <UIViewControllerPreviewing>)previewingContext commitViewController:(UIViewController *)viewControllerToCommit {
    [self showViewController:viewControllerToCommit sender:self];
}

- (BOOL)searchBarShouldBeginEditing:(UISearchBar *)searchBar {
    // 改变取消字体
    _searchController.searchBar.showsCancelButton = YES;
    UIButton *cancelBtn = [_searchController.searchBar valueForKey:@"cancelButton"];
    [cancelBtn setTitleColor:FF_MAIN_COLOR forState:UIControlStateNormal];
    [cancelBtn setTitle:DDYLocalStr(@"Cancel") forState:UIControlStateNormal];
    return YES;
}

@end

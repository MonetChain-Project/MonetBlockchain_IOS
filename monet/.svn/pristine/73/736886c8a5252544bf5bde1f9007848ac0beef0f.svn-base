//
//  FFBindingEmailVC.m
//  FireFly
//
//  Created by hely on 2017/10/13.
//  Copyright © 2017年 NAT. All rights reserved.
//

#import "FFBindingEmailVC.h"
#import "FFSendMessageViewController.h"

@interface FFBindingEmailVC ()<UITextFieldDelegate>
{
    UILabel     * _tipsLabel;
    UILabel     * _contryTips;
    UITextField * _emailText;
}
@end

@implementation FFBindingEmailVC

- (void)viewDidLoad {
    [super viewDidLoad];
    
    self.title = @"Binding email";
    
    UIBarButtonItem *rightBarItem = [[UIBarButtonItem alloc] initWithTitle:@"Next" style:UIBarButtonItemStylePlain target:self action:@selector(nextButtonOnClicked)];
    self.navigationItem.rightBarButtonItem = rightBarItem;
    
    [self observeNotification:UIKeyboardWillShowNotification];
    [self observeNotification:UIKeyboardWillHideNotification];
    [self observeNotification:UITextFieldTextDidChangeNotification];
}

- (void)buildUI
{
    [self.view addTapTarget:self action:@selector(tapAction)];
    
    _tipsLabel = [[UILabel alloc] initWithFrame:CGRectMake(20, 80, DDYSCREENW - 40, 45)];
    _tipsLabel.text = @"Binding email,increasing the safety of the account";
    _tipsLabel.font = NA_FONT(16);
    _tipsLabel.numberOfLines = 2;
    _tipsLabel.textColor = LC_RGB(111, 111, 111);
    [self.view addSubview:_tipsLabel];
    
    _contryTips = [[UILabel alloc] initWithFrame:CGRectMake(20, _tipsLabel.viewBottomY + 10, DDYSCREENW - 40, 20)];
    _contryTips.text = @"YOUR EMAIL";
    _contryTips.font = NA_FONT(12);
    [self.view addSubview:_contryTips];
    
    _emailText = [[UITextField alloc] initWithFrame:LC_RECT(15, _contryTips.viewBottomY + 10, DDYSCREENW - 30, 35)];
    _emailText.placeholder = @"email";
    _emailText.font = NA_FONT(24);
    _emailText.textColor = LC_RGB(42, 42, 42);
    _emailText.delegate = self;
    [self.view addSubview:_emailText];
    
}

- (void)nextButtonOnClicked
{
    FFSendMessageViewController * controller = [[FFSendMessageViewController alloc] init];
    controller.status = 1;
    [self.navigationController pushViewController:controller animated:YES];
}

-(void) handleNotification:(NSNotification *)notification
{
    if ([notification is:UIKeyboardWillShowNotification]) {
        
        [self keyboardWillShow:notification];
        
    }else if ([notification is:UIKeyboardWillHideNotification]){
        
        [self keyboardWillHide:notification];
    }
    else if ([notification is:UITextFieldTextDidChangeNotification]){
        
        [self textFieldChange];
        
    }
    
}


- (void)tapAction
{
    [self.view endEditing:YES];
}

#pragma mark -
#pragma mark Responding to keyboard events

- (BOOL)textFieldShouldReturn:(UITextField *)textField {
    
    [textField resignFirstResponder];
    
    return YES;
}

- (void)textFieldChange
{
    if (_emailText.text.length != 0) {
        
//        [_signBtn setUserInteractionEnabled:YES];
//        [_signBtn setBackgroundColor:LC_RGB(248, 220, 74)];
//        [_signBtn setTitleColor:LC_RGB(51, 51, 51) forState:UIControlStateNormal];
        
    }
    else
    {
//        [_signBtn setUserInteractionEnabled:NO];
//        [_signBtn setBackgroundColor:LC_RGB(230, 230, 230)];
//        [_signBtn setTitleColor:LC_RGB(153, 153, 153) forState:UIControlStateNormal];
    }
    
}

#pragma mark -
#pragma mark Responding to keyboard events

- (void)keyboardWillShow:(NSNotification *)notification {
    
    NSDictionary * userInfo = [notification userInfo];
    NSValue *animationDurationValue = [userInfo objectForKey:UIKeyboardAnimationDurationUserInfoKey];
    NSTimeInterval animationDuration;
    [animationDurationValue getValue:&animationDuration];
    
    [self moveInputBarWithKeyboardHeight:65 withDuration:animationDuration + 0.5];
}

- (void)keyboardWillHide:(NSNotification *)notification {
    
    NSDictionary* userInfo = [notification userInfo];
    NSValue *animationDurationValue = [userInfo objectForKey:UIKeyboardAnimationDurationUserInfoKey];
    NSTimeInterval animationDuration;
    [animationDurationValue getValue:&animationDuration];
    [self moveInputBarWithKeyboardHeight:0 withDuration:animationDuration+0.2];
}

- (void) moveInputBarWithKeyboardHeight:(float)height withDuration:(NSTimeInterval)interval
{
    [UIView animateWithDuration:interval animations:^{
        
        //        [_contentScrollView setContentOffset:CGPointMake(0, height)];
    }];
}

@end
